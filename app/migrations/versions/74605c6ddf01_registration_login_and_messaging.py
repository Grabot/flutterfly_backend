"""registration, login and messaging

Revision ID: 74605c6ddf01
Revises: 
Create Date: 2023-09-23 09:24:19.115926

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "74605c6ddf01"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "User",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("salt", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("about_me", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("origin", sa.Integer(), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("default_avatar", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_User")),
    )
    op.create_index(op.f("ix_User_username"), "User", ["username"], unique=True)
    op.create_table(
        "Friend",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("friend_id", sa.Integer(), nullable=False),
        sa.Column("friend_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("unread_messages", sa.Integer(), nullable=False),
        sa.Column("accepted", sa.Boolean(), nullable=False),
        sa.Column("ignored", sa.Boolean(), nullable=False),
        sa.Column("requested", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["friend_id"], ["User.id"], name=op.f("fk_Friend_friend_id_User")),
        sa.ForeignKeyConstraint(["user_id"], ["User.id"], name=op.f("fk_Friend_user_id_User")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Friend")),
    )
    op.create_table(
        "GlobalMessage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("body", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sender_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sender_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sender_id"], ["User.id"], name=op.f("fk_GlobalMessage_sender_id_User")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_GlobalMessage")),
    )
    op.create_index(
        op.f("ix_GlobalMessage_timestamp"), "GlobalMessage", ["timestamp"], unique=False
    )
    op.create_table(
        "PersonalMessage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("body", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("receiver_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["receiver_id"], ["User.id"], name=op.f("fk_PersonalMessage_receiver_id_User")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["User.id"], name=op.f("fk_PersonalMessage_user_id_User")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_PersonalMessage")),
    )
    op.create_index(
        op.f("ix_PersonalMessage_timestamp"), "PersonalMessage", ["timestamp"], unique=False
    )
    op.create_table(
        "UserToken",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("access_token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("token_expiration", sa.Integer(), nullable=False),
        sa.Column("refresh_token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("refresh_token_expiration", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.id"], name=op.f("fk_UserToken_user_id_User")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_UserToken")),
    )
    op.create_index(op.f("ix_UserToken_access_token"), "UserToken", ["access_token"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_UserToken_access_token"), table_name="UserToken")
    op.drop_table("UserToken")
    op.drop_index(op.f("ix_PersonalMessage_timestamp"), table_name="PersonalMessage")
    op.drop_table("PersonalMessage")
    op.drop_index(op.f("ix_GlobalMessage_timestamp"), table_name="GlobalMessage")
    op.drop_table("GlobalMessage")
    op.drop_table("Friend")
    op.drop_index(op.f("ix_User_username"), table_name="User")
    op.drop_table("User")
    # ### end Alembic commands ###
